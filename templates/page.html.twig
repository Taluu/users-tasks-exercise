<html>
    <head>
        <title>Test @One</title>
        <style>
            table {
                border-collapse: collapse;
            }

            table thead tr th,
            table tbody tr td {
                border: 1px solid black;
                padding: 10px;
            }

            span[name="user_tasks"] {
                margin: 5px;
            }
        </style>
    </head>
    <body>
        <div>
            <h1>Test @One</h1>
            <h2>Users List</h2>
            <table>
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>E-Mail</th>
                        <th>Tasks</th>
                        <th />
                    </tr>
                </thead>
                <tbody id="users_list" />
            </table>

            <h2>Tasks List</h2>
            <table>
                <thead>
                    <tr>
                        <th>Title</th>
                        <th>Description</th>
                        <th>Status</th>
                        <th>Creation Date</th>
                        <th>Assigned to</th>
                        <th />
                    </tr>
                </thead>
                <tbody id="tasks_list">
                </tbody>
            </table>

            <hr />

            <h2>Add a User</h2>
            <div>
                <input type="text" placeholder="Name" name="new_user[name]" />
                <input type="email" placeholder="E-Mail" name="new_user[email]" />
                <input type="button" id="new_user" value="Create" />
            </div>

            <h2>Add a Task</h2>
            <div>
                <input type="text" placeholder="Title" name="new_task[title]" />
                <input type="email" placeholder="Description" name="new_task[email]" />
                <input type="button" id="new_task" value="Create" />
            </div>

            <!--
            <div id="edit_div" style="display: none;">
                <hr />

                <h2>Modifications on a Task</h2>
                <div>
                    <input type="text" disabled placeholder="Title" name="edit_task[title]" />
                    <input type="text" disabled placeholder="Description" name="edit_task[description]" />
                    <input type="text" placeholder="Status" name="edit_task[status]" />

                    <select name="edit_task[user]" />
                        <option value="-1">None</option>
                        {% for user in users %}
                            <option value="/users/{{ user.id }}">{{ user.name }}</option>
                        {% endfor %}
                    </select>

                    <input type="button" id="edit_task" value="Edit" />
                </div>
            </div>
            // -->
        </div>

        <script>
            var one = {
                "tasks": {},
                "users": {},

                "ready": function (document) {
                },

                "redraw": function (document) {
                    one.redraw_users(document, one.users);
                    one.redraw_tasks(document, one.tasks);

                    one.register(document, 'task', 'edit', function (target) { console.log(target); });
                    one.register(document, 'task', 'delete', function (target) { console.log(target); });
                    one.register(document, 'user', 'delete', function (target) { console.log(target); });
                },

                "redraw_users": function (document, users) {
                    let old_list = document.getElementById("users_list");
                    let new_list  = document.createElement("tbody");

                    for (var id in users) {
                        let row, cell;
                        let user = users[id];

                        row = document.createElement("tr");

                        cell = document.createElement("td");
                        cell.appendChild(document.createTextNode(user.name));
                        row.appendChild(cell);

                        cell = document.createElement("td");
                        cell.appendChild(document.createTextNode(user.email));
                        row.appendChild(cell);

                        cell = document.createElement("td");

                        user.tasks.forEach(function (task) {
                            let span = document.createElement("span");
                            span.setAttribute("name", "user_tasks");
                            span.appendChild(document.createTextNode(task.title + " (" + task.status + ")"));

                            cell.appendChild(span);
                        });

                        row.appendChild(cell);

                        cell = document.createElement("td");
                        let span = document.createElement("span");
                        span.setAttribute("name", "user_delete");
                        span.setAttribute("user-id", user.id);
                        span.appendChild(document.createTextNode("Delete"));
                        cell.appendChild(span);
                        row.appendChild(cell);

                        new_list.appendChild(row);
                    }

                    old_list.parentNode.replaceChild(new_list, old_list);
                },

                "redraw_tasks": function (document, tasks) {
                    let old_list = document.getElementById("tasks_list");
                    let new_list  = document.createElement("tbody");

                    for (var id in tasks) {
                        let row, cell, span;
                        let task = tasks[id];

                        row = document.createElement("tr");

                        cell = document.createElement("td");
                        cell.appendChild(document.createTextNode(task.title));
                        row.appendChild(cell);

                        cell = document.createElement("td");
                        cell.appendChild(document.createTextNode(task.description));
                        row.appendChild(cell);

                        cell = document.createElement("td");
                        cell.appendChild(document.createTextNode(task.status));
                        row.appendChild(cell);

                        cell = document.createElement("td");
                        cell.appendChild(document.createTextNode(task.created_at.toLocaleDateString() + " " + task.created_at.toLocaleTimeString()));
                        row.appendChild(cell);

                        cell = document.createElement("td");
                        cell.appendChild(document.createTextNode(task.user ? task.user.name : 'nobody'));
                        row.appendChild(cell);

                        cell = document.createElement("td");
                            span = document.createElement("span");
                            span.setAttribute("name", "task_edit");
                            span.setAttribute("task-id", task.id);
                            span.appendChild(document.createTextNode("Edit"));
                        cell.appendChild(span);
                        cell.appendChild(document.createTextNode(" - "));
                            span = document.createElement("span");
                            span.setAttribute("name", "task_delete");
                            span.setAttribute("task-id", task.id);
                            span.appendChild(document.createTextNode("Delete"));
                        cell.appendChild(span);
                        row.appendChild(cell);

                        new_list.appendChild(row);
                    }

                    old_list.parentNode.replaceChild(new_list, old_list);
                },

                "register": function (document, name, action, callable) {
                    var selector = "span[name=\"" + name + "_" + action + "\"]";

                    document
                        .querySelectorAll(selector)
                            .forEach(function (span) {
                                span.addEventListener(
                                    'click',
                                    function () {
                                        var target = {};
                                        var targetName = "";

                                        if ("user" === name) {
                                            target = one.users["/users/" + span.attributes['user-id'].value];
                                            targetName = target.name;
                                        } else {
                                            target = one.tasks["/tasks/" + span.attributes['task-id'].value];
                                            targetName = target.title;
                                        }

                                        if ("delete" === action && !confirm("Delete " + name + " " + targetName + " ?")) {
                                            return;
                                        }

                                        callable(target);
                                    },
                                    false
                                );
                            })
                    ;
                },

                "load": function (path, status, success, error) {
                    let xhr = new XMLHttpRequest();

                    xhr.onreadystatechange = function() {
                        if (XMLHttpRequest.DONE === xhr.readyState) {
                            if (status === xhr.status && success) {
                                success(JSON.parse(xhr.responseText));
                            } else if (status !== xhr && error) {
                                error(xhr);
                            }
                        }
                    };

                    xhr.open("GET", path, true);
                    xhr.send();
                }
            };

            (function (document) {
                one.load("//localhost/tasks", 200, function (tasks) {
                    tasks.forEach(function (task) {
                        task.data.created_at = new Date(task.data.created_at);
                        one.tasks[task["@id"]] = task.data;
                    });

                    one.load("//localhost/users", 200, function (users) {
                        users.forEach(function (user) {
                            user.data.tasks.forEach(function (task_id, key) {
                                user.data.tasks[key] = one.tasks[task_id];
                            });

                            one.users[user["@id"]] = user.data;
                        });

                        tasks.forEach(function (task) {
                            if (null === task.data.user) {
                                return;
                            }

                            task.data.user = one.users[task.data.user];
                        });

                        one.redraw(document);
                    });
                }, function (xhr) { console.error(xhr); });
            })(document);
        </script>
    </body>
</html>
